name: test 001

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Generate dummy data
      id: badge_data
      run: |
        VALUE=$(date -u +'%Y-%m-%d %H:%M:%S')
        echo "value=$VALUE" >> $GITHUB_OUTPUT

    - name: Get last fetch time
      id: get_last_fetch_time
      run: |
        gist_id=${{ vars.GIST_PERSISTANT_VARIABLE }}
        gist_filename=${{ vars.GIST_LAST_GUARDIAN_FETCH }}

        echo "ID : $gist_id"
        echo "Filename : $gist_filename"
        
        api_url="https://api.github.com/gists/$gist_id"
        raw_url=$(curl -sSL "$api_url" | jq -r ".files[\"$gist_filename\"].raw_url")

        content=$(curl -sSL "$raw_url")
        echo "last=$content" >> $GITHUB_OUTPUT

    - name: Fetch Guardian News
      id: fetch_news
      run: |
        VALUE=$(date -u +'%Y-%m-%d %H:%M:%S')
        echo "value=$VALUE" >> $GITHUB_OUTPUT

        last_fetch=${{ steps.get_last_fetch_time.outputs.last }}
        echo "LAST FETCH : $last_fetch"

        API_KEY=${{ secrets.GUARDIAN_KEY }} 
        URL="https://content.guardianapis.com/search"
        ORDER_BY="newest"  
        PAGE_SIZE=5
        response=$(curl -s -G \
            --data-urlencode "api-key=$API_KEY" \
            --data-urlencode "order-by=$ORDER_BY" \
            --data-urlencode "page-size=$PAGE_SIZE" \
            "$URL")
        sorted_data=$(echo "$response" | jq -r '.response.results | sort_by(.webPublicationDate) | .[] | [.webPublicationDate, .sectionName, .pillarName, .type, .webTitle, .webUrl] | @tsv')

        # Looks like there is a size limit on the value
        # using GITHUB_OUTPUT.  Use a file instead
        #echo "response=$sorted_data" >> $GITHUB_OUTPUT
        echo "$sorted_data" > response.txt

    - name: Process Guardian News
      id: process_news
      run: |
        current_time=$(date +"%s")
        sorted_data=$(cat response.txt)

        while IFS=$'\t' read -r webPublicationDate sectionName pillarName type webTitle webUrl; do
          pubunixtime=$(date -d "$webPublicationDate" "+%s")
          diff_minutes=$((($current_time - $pubunixtime) / 60))
          echo "$diff_minutes minutes ago"

          TZ='Europe/London'
          format="+%d %B, %H:%M"
          formatted=$(TZ=$TZ date -d "@$pubunixtime" "$format")
          formatted=${formatted/#0/}

          shorturl=$(curl -s -d "format=simple&url=$webUrl" "https://is.gd/create.php")

          tg_message=$(printf "%s\n%s/%s %s" "$formatted" "$sectionName" "$pillarName" "$shorturl")

          tg_response=$(curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_KEY }}/sendMessage" -d chat_id="${{ vars.TELEGRAM_CHANNEL_ID }}" -d text="$tg_message")

        done < <(echo "$sorted_data")

    - name: Process News
      run: |
        CURRENT=$(date -u +'%s')
        echo "current=$CURRENT" >> $GITHUB_OUTPUT
        echo ${{ steps.fetch_news.outputs.response }}


